{
  "CLICK ON THE GRID TO GET THE RELATED ITEMS TIME SERIES": "CLIQUE NO GRID PARA OBTER OS ITENS RELACIONADOS DA SÉRIE TEMPORAL",
  "Consent": "Consentimento",
  "CRM System CSV File ": "CRM Arquivo CSV ",
  "Data Impacted By Data Breach": "Dados Afetados pela Violação de Dados",
  "Decoded": "Decodificado",
  "Domain Data": "Dados do Domínio",
  "Event Consent": "Evento de Consentimento",
  "Event Consent Date": "Data Evento Consentimento",
  "Event Consent Metadata Create Date": "Data de Criação dos Metadados",
  "Event Consent Metadata Update Date": "Data de Atualização dos Metadados",
  "Event Consent Status": "Status",
  "Event Data Breach": "Evento de Violação de Dados",
  "Event Data Breach Description": "Descrição",
  "Event Data Breach Id": "ID",
  "Event Data Breach Impact": "Impacto",
  "Event Data Breach Metadata Create Date": "Data de Criação dos Metadados",
  "Event Data Breach Metadata Update Date": "Data de Atualização dos Metadados",
  "Event Data Breach Source": "Fonte",
  "Event Data Breach Status": "Status",
  "Event Form Ingestion": "Evento Ingestão de Formulário",
  "Event Form Ingestion Domain b64": "Dados b64",
  "Event Form Ingestion Metadata Create Date": "Data de Criação dos Metadados",
  "Event Form Ingestion Metadata GUID": "GUID de Metadados",
  "Event Form Ingestion Operation": "Operação",
  "Event Form Ingestion Type": "Tipo",
  "Event Group Ingestion": "Evento Ingestão de Grupo",
  "Event Group Ingestion Has Controller": "Possui Controlador",
  "Event Group Ingestion Has Data Owner": "Possui Proprietário de Dados",
  "Event Group Ingestion Has Processor": "Possui Processador",
  "Event Group Ingestion Metadata End Date": "Data Final dos Metadados",
  "Event Group Ingestion Metadata Start Date": "Data de Início dos Metadados",
  "Event Group Ingestion Operation": "Operação",
  "Event Group Ingestion Type": "Tipo",
  "Event Ingestion": "Evento Ingestão",
  "Event Ingestion Business Rules": "Regras de Negócio",
  "Event Ingestion Domain b64": "Dados b64",
  "Event Ingestion Domain Unstructured Data b64": "Dados Não Estruturados do Domínio b64",
  "Event Ingestion Metadata Create Date": "Data de Criação",
  "Event Ingestion Metadata GUID": "GUID",
  "Event Ingestion Operation": "Operação",
  "Event Ingestion Type": "Tipo",
  "Event Subject Access Request": "Evento Solicitação de Acesso",
  "Event Subject Access Request Metadata Create Date": "Data de Criação",
  "Event Subject Access Request Metadata Update Date": "Data Atualização",
  "Event Subject Access Request Request Type": "Tipo de Solicitação",
  "Event Subject Access Request Status": "Status",
  "Event Training": "Eventos de Treinamento",
  "Event Training Status": "Status",
  "Graph": "Gráfico",
  "Has Data Procedures": "Possui Procedimentos de Dados",
  "Has Form Ingestion Event": "Possui Evento Ingestão de Formulário",
  "Has Ingestion Event": "Possui Evento Ingestão",
  "Has Ingress Peering": "Possui Emparelhamento",
  "Has Lawful Basis On": "Possui Base Legal",
  "Has Privacy Notice": "Possui Aviso de Privacidade",
  "Has Privacy Impact Assessment": "Possui Availação de Impacto de Privacidade",
  "Has Policy": "Possui Apólice",
  "Has Phone": "Possui Telefone",
  "Has Security Group": "Possui Grupo de Segurança",
  "Has Server": "Possui Servidor",
  "Has Contract": "Possui Contrato",
  "Impacted By Data Breach": "Impactado pela Violação de Dados",
  "Ingestion Date": "Data de Ingestão",
  "Lives": "Reside",
  "Location Address": "Endereço",
  "Location Address City": "Cidade",
  "Location Address Full Address": "Endereço Completo",
  "Location Address Neighborhood": "Bairro",
  "Location Address parser category": "Parser de Endereços - Categoria",
  "Location Address parser city": "Parser de Enderecos - Cidade",
  "Location Address parser city district": "Parser de Enderecos - Estado",
  "Location Address parser country": "Parser de Enderecos - País",
  "Location Address parser country region": "Parser de Endereços - Continente",
  "Location Address parser entrance": "Parser de Endereços - Entrada",
  "Location Address parser house": "Parser de Endereços - Residência",
  "Location Address parser house number": "Parser de Endereços – Número Residencial",
  "Location Address parser island": "Parser de Endereços - Ilha",
  "Location Address parser level": "Parser de Endereços - Nível",
  "Location Address parser near": "Parser de Endereços – Próximo",
  "Location Address parser po box": "Parser de Endereços – Caixa Postal",
  "Location Address parser postcode": "Parser de Endereços - CEP",
  "Location Address parser road": "Parser de Endereços - Rua",
  "Location Address parser staircase": "Parser de Endereços - Escadaria",
  "Location Address parser state": "Parser de Endereços - Estado",
  "Location Address parser state district": "Parser de Endereços - Distrito",
  "Location Address parser suburb": "Parser de Endereços - Subúrbio",
  "Location Address parser unit": "Parser de Endereços - Unidade",
  "Location Address parser world region": "Parser de Endereços – Região do Mundo",
  "Location Address Post Code": "CEP",
  "Location Address State": "Estado",
  "Location Address Street": "Rua",
  "Made SAR Request": "Solicitação SAR Realizada",
  "Marketing Email System": "Sistema de Email Marketing",
  "Metadata Create Date": "Data de Criação dos Metadados",
  "Metadata GDPR Status": "Status da LGPD",
  "Metadata Lineage": "Linhagem",
  "Metadata Lineage Location Tag": "Tag de Localização da Linhagem dos Metadados",
  "Metadata Lineage Server Tag": "Tag de Servidor da Linhagem dos Metadados",
  "Metadata Redaction": "Redação dos Metadados",
  "Metadata Status": "Status dos Metadados",
  "Metadata Type": "Tipo dos Metadados",
  "Metadata Type Event Consent": "Tipo de Dados – Evento Consentimento",
  "Metadata Type Event Data Breach": "Tipo de Dados – Evento Violação de Dados",
  "Metadata Type Event Form Ingestion": "Tipo de Dados – Evento Ingestão de Formulário",
  "Metadata Type Event Group Ingestion": "Tipo de Dados – Evento Ingestão de Grupo",
  "Metadata Type Event Ingestion": "Tipo de Dados – Evento Ingestão",
  "Metadata Type Location Address": "Tipo de Dados - Endereço",
  "Metadata Type Object AWS Instance": "Tipo de Dados - Objeto da Instância do AWS",
  "Metadata Type Object Credential": "Tipo de Dados - Credencial do Objeto",
  "Metadata Type Object Data Source": "Tipo de Fonte de Dados",
  "Metadata Type Object Email Address": "Tipo de Dados - Endereço de Email",
  "Metadata Type Object Insurance Policy": "Tipo de Dados - Apólice de Seguro",
  "Metadata Type Object Privacy Impact Assessment": "Tipo de Dados - Avaliação de Impacto de Privacidade",
  "Metadata Type Person Natural": "Tipo de Dados - Pessoa Natural",
  "Metadata Update Date": "Data de Atualização",
  "Metadata Version": "Versão",
  "num events": "Número Eventos",
  "Object Awareness Campaign": "Campanha de Conscientização",
  "Object Awareness Campaign Description": "Descrição",
  "Object Awareness Campaign Form Id": "ID Formulário",
  "Object Awareness Campaign Form Owner Id": "ID do Proprietário do Formulário",
  "Object Awareness Campaign Form Submission Id": "ID Envio do Formulário",
  "Object Awareness Campaign Form Submission Owner Id": "ID do Proprietário do Envio do Formulário",
  "Object Awareness Campaign Start Date": "Data de Início",
  "Object Awareness Campaign Stop Date": "Data Final",
  "Object Awareness Campaign URL": "URL",
  "Object AWS Instance": "Objeto da Instância do AWS",
  "Object AWS Instance EbsOptimized": "EBS Otimizado",
  "Object AWS Instance EnaSupport": "Suporte de ENA ",
  "Object AWS Instance Id": "ID",
  "Object AWS Instance ImageId": "IDImagem",
  "Object AWS Instance InstanceType": "Tipo de Instância",
  "Object AWS Instance KeyName": "Nome Chave",
  "Object AWS Instance LaunchTime": "Lançamento",
  "Object AWS Instance PrivateDnsName": "NomeDNSPrivado",
  "Object AWS Instance PrivateIpAddress": "Endereços de IP privados",
  "Object AWS Instance ProductCodeIDs": "Código do Produto",
  "Object AWS Instance ProductCodeTypes": "Tipos de Código do Produto",
  "Object AWS Instance Public Dns Name": "Nome do DNS Público",
  "Object AWS Instance Tags": "Tag",
  "Object AWS Network Interface": "Objeto Interface AWS",
  "Object AWS Network Interface AttachTime": "Anexar",
  "Object AWS Network Interface Description": "Descrição",
  "Object AWS Network Interface MacAddress": "Endereço MAC",
  "Object AWS Network Interface NetworkInterfaceId": "ID da Interface de Rede",
  "Object AWS Network Interface PrivateDnsName": "Nome do DNS Privado",
  "Object AWS Network Interface PrivateIpAddresses": "Endereços IP Privados",
  "Object AWS Security Group": "Objeto do Grupo de Segurança da AWS",
  "Object AWS Security Group GroupName": "Nome do Grupo",
  "Object AWS Security Group Id": "ID",
  "Object AWS Security Group Ip Perms Egress IpRanges": "IP Permanente Saída IPRanges",
  "Object AWS Security Group Ip Perms Ingress IpRanges": "IP Permanente Entrada IPRanges",
  "Object AWS VPC": "Objeto AWS VPC",
  "Object AWS VPC Id": "Objeto AWS VPC ID",
  "Object Credential": "Objeto Credencial",
  "Object Credential Login SHA256": "Login SHA256",
  "Object Credential User Id": "ID do Usuário",
  "Object Data Policy": "Objeto Política de Dados",
  "Object Data Policy CreateDate": "Data de Criação",
  "Object Data Policy Description": "Descrição",
  "Object Data Policy Form Id": "ID Formulário",
  "Object Data Policy Form Owner Id": "ID do Proprietário do Formulário",
  "Object Data Policy Form Submission Id": "ID Envio do Formulário",
  "Object Data Policy Form Submission Owner Id": "ID do Proprietário do Envio do Formulário",
  "Object Data Policy Name": "Nome",
  "Object Data Policy UpdateDate": "Data de Atualização",
  "Object Data Procedures": "Procedimentos de Dados",
  "Object Data Procedures Delete Mechanism": "Excluir Mecanismo",
  "Object Data Procedures Delete URL": "Excluir URL",
  "Object Data Procedures Property": "Propriedade",
  "Object Data Procedures Type": "Tipo",
  "Object Data Procedures Update Mechanism": "Mecanismo de Atualização",
  "Object Data Procedures Update URL": "Atualização URL",
  "Object Data Source": "Fonte de Dados",
  "Object Data Source Create Date": "Data de Criação",
  "Object Data Source Credential ApiKey": "Credencial ApiKey",
  "Object Data Source Credential Principal": "Credencial Principal",
  "Object Data Source Credential Secret": "Credencial Sigilosa",
  "Object Data Source Description": "Descrição",
  "Object Data Source Form Id": "ID Formulário",
  "Object Data Source Form Owner Id": "ID do Proprietário do Formulário",
  "Object Data Source Form Submission Id": "ID Envio do Formulário",
  "Object Data Source Form Submission Owner Id": "ID do Proprietário do Envio do Formulário",
  "Object Data Source Name": "Nome",
  "Object Data Source Update Date": "Data de Atualização",
  "Object Data Source URI Config": "Configuração URI",
  "Object Data Source URI Control": "Controle URI",
  "Object Data Source URI Delete": "Exclusão URI",
  "Object Data Source URI Monitor": "Monitoramento URI",
  "Object Data Source URI Read": "Leitura URI",
  "Object Data Source URI Template": "Modelo URI",
  "Object Data Source URI Update": "Atualização URI",
  "Object Email Address": "Objeto Email",
  "Object Email Address Email": "Email",
  "Object Form": "Objeto Formulário",
  "Object Form Metadata Create Date": "Data de Criação",
  "Object Form Metadata GUID": "GUID",
  "Object Form Metadata Owner": "Proprietário",
  "Object Form Text": "Texto",
  "Object Form URL": "URL",
  "Object Form Vertex Label": "Vertex Classificação",
  "Object Identity Card": "Objeto Identidade",
  "Object Identity Card Id Name": "ID Nome",
  "Object Identity Card Id Value": "ID Valor",
  "Object Insurance Policy": "Objeto Apólice de Seguros",
  "Object Insurance Policy Form Id": "ID Formulário",
  "Object Insurance Policy Form Owner Id": "ID do Proprietário do Formulário",
  "Object Insurance Policy Form Submission Id": "ID Envio do Formulário",
  "Object Insurance Policy Form Submission Owner Id": "ID do Proprietário do Envio do Formulário",
  "Object Insurance Policy Number": "Número",
  "Object Insurance Policy Product Type": "Tipo de Produto",
  "Object Insurance Policy Property Type": "Tipo de Propriedade",
  "Object Insurance Policy Renewal": "Renovação",
  "Object Insurance Policy Renewal Date": "Data de Renovação",
  "Object Insurance Policy Status": "Status",
  "Object Insurance Policy Type": "Tipo",
  "Object Lawful Basis": "Objeto Base Legal",
  "Object Lawful Basis Description": "Descrição",
  "Object Lawful Basis Id": "ID",
  "Object Contract": "Objeto Contrato",
  "Object Contract Description": "Descrição",
  "Object Contract Form Id": "ID Formulário",
  "Object Contract Form Owner Id": "ID do Proprietário do Formulário",
  "Object Contract Form Submission Id": "ID Envio do Formulário",
  "Object Contract Form Submission Owner Id": "ID do Proprietário do Envio do Formulário",
  "Object Contract Id": "ID",
  "Object Contract Link": "Conexão",
  "Object Contract Status": "Status",
  "Object Notification Templates": "Objeto Modelos de Notificação",
  "Object Notification Templates Id": "ID",
  "Object Notification Templates Label": "Classificação",
  "Object Notification Templates Text": "Texto",
  "Object Notification Templates Types": "Tipos",
  "Object Notification Templates URL": "URL",
  "Object Phone Number": "Objeto Telefone",
  "Object Phone Number Last 7 Digits": "Últimos 7 dígitos",
  "Object Phone Number Numbers Only": "Apenas Números",
  "Object Phone Number Raw": "Número Telefone Bruto",
  "Object Phone Number Type": "Tipo",
  "Object Privacy Impact Assessment": "Objeto Avaliação de Impacto de Privacidade",
  "Object Privacy Impact Assessment Compliance Check Passed": "Verificação de Conformidade Aprovada",
  "Object Privacy Impact Assessment Delivery Date": "Data de Envio",
  "Object Privacy Impact Assessment Description": "Descrição",
  "Object Privacy Impact Assessment Form Id": "ID Formulário",
  "Object Privacy Impact Assessment Form Owner Id": "ID do Proprietário do Formulário",
  "Object Privacy Impact Assessment Form Submission Id": "ID Envio do Formulário",
  "Object Privacy Impact Assessment Form Submission Owner Id": "ID do Proprietário do Envio do Formulário",
  "Object Privacy Impact Assessment Intrusion On Privacy": "Intrusão na Privacidade",
  "Object Privacy Impact Assessment Risk Of Reputational Damage": "Risco de Dano de Reputação",
  "Object Privacy Impact Assessment Risk To Corporation": "Risco à Corporação",
  "Object Privacy Impact Assessment Risk To Individuals": "Risco para os Titulares",
  "Object Privacy Impact Assessment Start Date": "Data de Início",
  "Object Privacy Notice": "Objeto Aviso de Privacidade",
  "Object Privacy Notice Delivery Date": "Data de Envio",
  "Object Privacy Notice Description": "Descrição",
  "Object Privacy Notice Effect On Individuals": "Efeito nos Titulares",
  "Object Privacy Notice Expiry Date": "Data de Validade",
  "Object Privacy Notice Form Id": "ID Formulário",
  "Object Privacy Notice Form Owner Id": "ID do Proprietário do Formulário",
  "Object Privacy Notice Form Submission Id": "ID Envio do Formulário",
  "Object Privacy Notice Form Submission Owner Id": "ID do Proprietário do Envio do Formulário",
  "Object Privacy Notice How Is It Collected": "Como é coletado?",
  "Object Privacy Notice How Will It Be Used": "Como será usado?",
  "Object Privacy Notice Id": "ID",
  "Object Privacy Notice Info Collected": "Informação Coletada",
  "Object Privacy Notice Likely To Complain": "Propenso a Reclamar",
  "Object Privacy Notice Metadata Create Date": "Data de Criação dos Metadados",
  "Object Privacy Notice Metadata Update Date": "Data de Atualização dos Metadados",
  "Object Privacy Notice Text": "Texto",
  "Object Privacy Notice URL": "URL",
  "Object Privacy Notice Who Is Collecting": "Quem está coletando?",
  "Object Privacy Notice Who Will It Be Shared": "Com quem será compartilhado?",
  "Object Privacy Notice Why Is It Collected": "Por que é coletado?",
  "Operation": "Operação",
  "Outlook PST Files ": "Arquivos PST do Outlook ",
  "PDF Form Files ": "Arquivos de PDF ",
  "Person Employee": "Colaborador",
  "Person Employee Date Of Birth": "Data de Nascimento",
  "Person Employee Ethnicity": "Etnia",
  "Person Employee Full Name": "Nome Completo",
  "Person Employee Gender": "Gênero",
  "Person Employee Height": "Altura",
  "Person Employee ID": "Identidade",
  "Person Employee Is LGPD Role": "Qual função na LGPD?",
  "Person Employee Last Name": "Sobrenome",
  "Person Employee Marital Status": "Estado Civil",
  "Person Employee Name Qualifier": "Título Nome",
  "Person Employee Nationality": "Nacionalidade",
  "Person Employee Place Of Birth": "Naturalidade",
  "Person Employee Religion": "Religião",
  "Person Employee Role": "Função",
  "Person Employee Title": "Título",
  "Person Identity": "Identidade do Titular",
  "Person Identity Date Of Birth": "Data de Nascimento",
  "Person Identity Ethnicity": "Etnia",
  "Person Identity Full Name": "Nome Completo",
  "Person Identity First Name": "Nome",
  "Person Identity Full Name fuzzy": "Nome Completo Fuzzy",
  "Person Identity Gender": "Gênero",
  "Person Identity Height": "Altura",
  "Person Identity ID": "Identidade",
  "Person Identity Last Name": "Sobrenome",
  "Person Identity Marital Status": "Estado Civil",
  "Person Identity Name Qualifier": "Título Nome",
  "Person Identity Nationality": "Nacionalidade",
  "Person Identity Place Of Birth": "Naturalidade",
  "Person Identity Religion": "Religião",
  "Person Identity Title": "Título",
  "Person Natural": "Titular",
  "Person Natural Customer ID": "Identificação do Titular",
  "Person Natural Date Of Birth": "Data de Nascimento",
  "Person Natural Ethnicity": "Etnia",
  "Person Natural First Name": "Nome",
  "Person Natural Full Name": "Nome Completo",
  "Person Natural Full Name fuzzy": "Nome Completo Fuzzy",
  "Person Natural Gender": "Gênero",
  "Person Natural Height": "Altura",
  "Person Natural Last Name": "Sobrenome",
  "Person Natural Marital Status": "Estado civil",
  "Person Natural Name Qualifier": "Título Nome",
  "Person Natural Nationality": "Nacionalidade",
  "Person Natural Place Of Birth": "Naturalidade",
  "Person Natural Religion": "Religião",
  "Person Natural Title": "Título",
  "Person Organisation": "Pessoa Jurídica",
  "Person Organisation Department": "Departamento",
  "Person Organisation Email": "Email",
  "Person Organisation Fax": "Fax",
  "Person Organisation Form Id": "ID Formulário",
  "Person Organisation Form Owner Id": "ID do Proprietário do Formulário",
  "Person Organisation Form Submission Id": "ID Envio do Formulário",
  "Person Organisation Form Submission Owner Id": "ID do Proprietário do Envio do Formulário",
  "Person Organisation Name": "Nome",
  "Person Organisation orgCountrySet": "País",
  "Person Organisation Phone": "Telefone",
  "Person Organisation Registration Number": "Número de Registro",
  "Person Organisation Sector": "Setor",
  "Person Organisation Short Name": "Nome Curto",
  "Person Organisation Tax Id": "CNPJ",
  "Person Organisation Type": "Tipo",
  "Person Organisation URL": "URL",
  "Runs On": "Roda No Sistema",
  "Property": "Propriedade",
  "Send Query": "Enviar Consulta",
  "Structured Data Insertion": "Inserção de dados estruturados",
  "Type": "Tipo",
  " unmatched": " Não Encontrado",
  "Unstructured Data Insertion": "Inserção de Dados Não Estruturados",
  "Uses Email": "Usa Email",
  "Value": "Valor",
  "Address Field": "Campo de Endereço",
  "Advanced": "Avançado",
  "Age": "Idade",
  "Basic Components": "Componentes Básicos",
  "Button": "Botão",
  "Checkbox": "Caixa de Seleção",
  "Columns": "Colunas",
  "Consent Status": "Status de Consentimento",
  "Container": "Container",
  "Content": "Conteúdo",
  "Copy": "Cópia",
  "Currency": "Moeda",
  "Custom": "Personalizadas",
  "Data": "Dados",
  "Data Grid": "Grade de Dados",
  "Data Map": "Mapa de Dados",
  "Data Type": "Tipo de Dados",
  "Date": "Data",
  "Date / Time": "Data / Horário",
  "Day": "Dia",
  "Delete Link": "Excluir Link",
  "Delete Mechanism": "Excluir Mecanismo",
  "Delivery Date": "Data de Envio",
  "Description": "Descrição",
  "Drag and Drop a form component": "Arrastar e soltar um componente do formulário",
  "Edit": "Editar",
  "Edit Grid": "Editar Grade",
  "Edit JSON": "Editar JSON",
  "Email": "Email",
  "Expiry Date": "Data de Validade",
  "Field Set": "Conjunto de Campos",
  "File": "Arquivo",
  "Full Name": "Nome Completo",
  "Gender": "Gênero",
  "Hidden": "Oculto",
  "HTML Element": "Elemento HTML",
  "Id": "ID",
  "ID": "Identidade",
  "Impact": "Impacto",
  "Label": "Classificação",
  "label": "Classificação",
  "Layout": "Layout",
  "Link": "Conexão",
  "Location": "Localização",
  "Modal Edit": "Edição Modal",
  "Nationality": "Nacionalidade",
  "Nested Form": "Formulário Nested",
  "Number": "Número",
  "Panel": "Painel",
  "Password": "Senha",
  "Paste below": "Colar Abaixo",
  "Person Age": "Idade ",
  "Person Name": "Nome",
  "Phone Number": "Número de telefone",
  "Radio": "Rádio",
  "reCAPTCHA": "reCAPTCHA",
  "Remove": "Remover",
  "Resource": "Recurso",
  "Select Boxes": "Selecionar Caixas",
  "Select": "Selecionar",
  "Signature": "Assinatura",
  "Start Date": "Data de Início",
  "Status": "Status",
  "Submit": "Enviar",
  "Survey": "Pesquisa",
  "Table": "Table",
  "Tabs": "Tabs",
  "Tags": "Tags",
  "Text Area": "Área de Texto",
  "Text Field": "Campo de Texto",
  "Time": "Horário",
  "Tipo": "Tipo",
  "Types": "Tipos",
  "Update Date": "Data de Atualização",
  "Update Link": "Atualizar Link",
  "Update Mechanism": "Mecanismo de Atualização",
  "Url": "URL",
  "Well": "Bem",
  "Checks Passed": "Verificação Aprovada",
  "Countries": "Países",
  "Intrusion on Privacy": "Intrusão na Privacidade",
  "Long Name": "Nome Comprido",
  "Reputational Damage": "Dano de Reputação",
  "Risk To Business": "Risco para os Negócios",
  "Risk To Individuals": "Risco para os Indivíduos",
  "Role": "Função",
  "Short Name": "Nome Curto",
  "Title": "Título",
  "Awareness Campaigns": "Campanhas de Conscientização",
  "Employees": "Colaboradores",
  "Charts": "Gráficos",
  "NavPanelAwarenessPopup_title": "Conscientização",
  "NavPanelAwarenessPopup_text": "Você deve se certificar de que os tomadores de decisão e as\npessoas-chave em sua organização estejam cientes de que a lei\nestá mudando para o LGPD. Eles precisam avaliar o impacto que\nisso pode ter no dia a dia.",
  "NavPanelAwarenessPopup_query": "def retVal = '';\ntry {\n\n  long numEvents = g.V().has('Metadata.Type.Object.Awareness_Campaign',eq('Object.Awareness_Campaign')).in().as('events').count().next();\n  \n  \n  def map = g.V().has('Metadata.Type.Object.Awareness_Campaign',eq('Object.Awareness_Campaign')).in().as('events').groupCount().by('Event.Training.Status').next();\n            \n  \n  long failedCount = map.get('Failed') == null ? 0 :map.get('Failed');\n  long secondReminder = map.get('Second  Reminder') == null ? 0 : map.get('Second  Reminder') ;\n  long firstReminder = map.get('Reminder Sent') == null ? 0 :  map.get('Reminder Sent');\n  long numPassed = (numEvents - failedCount - secondReminder - firstReminder); \n  \n  long scoreValue = 100L;\n  if (numEvents > 0){\n    \n    long pcntFailed = (long) (100L*failedCount/numEvents);\n    if (pcntFailed > 10){\n      scoreValue -= 60L;\n    }\n    else if (failedCount > 0){\n      scoreValue -= (40L + 2L* pcntFailed)\n    }\n    \n    \n  \n    long pcntSecondReminder = (long) (100L*secondReminder/numEvents);\n    if (pcntSecondReminder > 10){\n      scoreValue -= 30L;\n    }\n    else if (secondReminder > 0) {\n      scoreValue -= (10L + 2L*pcntWithNegativeConsent)\n    }\n  \n    scoreValue -= (10L * firstReminder/numEvents)\n  \n    // add a bit of a score, after all there was at least some training.\n    if (scoreValue == 0)\n    {\n      scoreValue = 10L\n    }\n  \n    \n     \n  }else{\n    scoreValue = 0L; \n  }\n  \n  StringBuffer sb = new StringBuffer ('{ \"scoreValue\": ');\n  \n  sb.append(scoreValue)\n    .append(', \"scoreExplanation\":\"');\n  if (numEvents > 0)  {\n    sb.append('Esta pontuação reflete que de ')\n      .append(numEvents).append((numEvents == 1)? ' registro de treinamento, ':' registros de treinamento, ')\n    if (numPassed == 1){\n      sb.append(' um PASSOU os testes da campanha de conscientização, ');\n    }\n    else if (numPassed > 1){\n      sb.append(numPassed).append(' PASSARAM os testes da campanha de conscientização, ');\n    }\n    if (failedCount > 0){\n      sb.append(failedCount).append((failedCount == 1)? ' FALHOU ':' FALHARAM ').append(' os testes da campanha de conscientização, ');\n    }\n    sb.append(firstReminder).append((firstReminder == 1)?' foi enviado um PRIMEIRO lembrete para fazer o curso de treinamento de campanha de conscientização, '\n        : ' foram enviados um PRIMEIRO lembrete para fazer o curso de treinamento de campanha de conscientização, ')\n      .append(secondReminder).append( (secondReminder == 1)?' foi enviado um SEGUNDO lembrete para fazer o curso de treinamento de campanha de conscientização.'\n        : ' foram enviados um SEGUNDO lembrete para fazer o curso de treinamento de campanha de conscientização.')\n\n  }\n  \n  else {\n    sb.append('Não há registros de treinamento de campanhas de conscientização.')\n  }\n  sb.append('\" }')  \n  \n  retVal = sb.toString()\n} catch (Throwable t) {\n    \n  StringBuffer sb = new StringBuffer ('{ \"scoreValue\": ');\n  \n  sb.append(0L)\n    .append(', \"scoreExplanation\":\"');\n    sb.append('Não há registros de treinamento de campanhas de conscientização.')\n  sb.append('\" }')  \n  retVal = sb.toString()\n}\nretVal.toString()",
  "Children Ages": "Histograma de idades",
  "Children Data Graph": "Gráfico de Dados",
  "NavPanelChildrenPopup_title": "Crianças",
  "NavPanelChildrenPopup_text": "Você deve começar a pensar agora sobre a necessidade de\nimplementar sistemas para verificar a idade dos indivíduos\ne obter o consentimento dos pais ou do responsável para \nqualquer atividade de processamento de dados.",
  "NavPanelChildrenPopup_query": "long ageThresholdMs = (long)(System.currentTimeMillis() - (3600000L * 24L *365L  * 18L));\ndef dateThreshold = new java.util.Date (ageThresholdMs);\n\n\nlong numChildren = g.V().has('Metadata.Type.Person.Natural',eq('Person.Natural'))\n.where(\n    and(\n      __.values('Person.Natural.Date_Of_Birth').is(gte(dateThreshold))\n    )\n  )\n.count().next()\n\nlong numNoGuardian = g.V().has('Metadata.Type.Person.Natural',eq('Person.Natural'))\n.where(\n    and(\n      __.values('Person.Natural.Date_Of_Birth').is(gte(dateThreshold))\n    ,__.outE('Has_Parent_Or_Guardian').count().is(eq(0))\n    )\n  )\n.count().next()\n \nlong numWithoutAnyConsent = g.V().has('Metadata.Type.Person.Natural',eq('Person.Natural'))\n.where(\n    and(\n      __.values('Person.Natural.Date_Of_Birth').is(gte(dateThreshold))\n    ,__.outE('Consent').count().is(eq(0))\n    )\n  )\n.count().next()\n \n \nlong numNegativeConsent = \n\ng.V().has('Metadata.Type.Person.Natural',eq('Person.Natural'))\n .where(\n    __.values('Person.Natural.Date_Of_Birth').is(gte(dateThreshold))\n  ).as('children')\n .match(\n     __.as('children').outE('Consent').as('consentEdges')\n    ,__.as('consentEdges').count().as('consentEdgesCount')\n    ,__.as('consentEdges').inV().as('consentEvents')\n    ,__.as('consentEvents').has('Event.Consent.Status',eq('No Consent ')).count().as('negConsentCount')\n    ,__.as('children').id().as('childId')\n\n )\n .select('consentEdgesCount','negConsentCount', 'childId')\n.where('consentEdgesCount',eq('negConsentCount'))\n.where(__.as('consentEdgesCount').is(gt(0)))\n\n.count().next()\n\n\n\nlong numPendingConsent = \n\ng.V().has('Metadata.Type.Person.Natural',eq('Person.Natural'))\n .where(\n    __.values('Person.Natural.Date_Of_Birth').is(gte(dateThreshold))\n  ).as('children')\n .match(\n     __.as('children').outE('Consent').as('consentEdges')\n    ,__.as('consentEdges').count().as('consentEdgesCount')\n    ,__.as('consentEdges').inV().as('consentEvents')\n    ,__.as('consentEvents').has('Event.Consent.Status',eq('Consent Pending')).count().as('pendingConsentCount')\n    ,__.as('children').id().as('childId')\n\n )\n .select('consentEdgesCount','pendingConsentCount', 'childId')\n.where('consentEdgesCount',eq('pendingConsentCount'))\n.where(__.as('consentEdgesCount').is(gt(0)))\n\n.count().next()\n\n\n\nlong scoreValue = 100L;\nif (numChildren > 0){\n  \n  long pcntWithoutAnyConsent = (long) (100L*numWithoutAnyConsent/numChildren);\n  if (pcntWithoutAnyConsent > 10){\n    scoreValue -= 32L;\n  }\n  else if (numWithoutAnyConsent > 0) {\n    scoreValue -= (22L + pcntWithoutAnyConsent)\n  }\n  \n  \n  long pcntWithoutAnyGuardian = (long) (100L*numNoGuardian/numChildren);\n  if (pcntWithoutAnyGuardian > 10){\n    scoreValue -= 32L;\n  }\n  else if (numNoGuardian > 0){\n    scoreValue -= (22L + pcntWithoutAnyGuardian)\n  }\n    \n  long pcntWithNegativeConsent = (long) (100L*numNegativeConsent/numChildren);\n  if (pcntWithNegativeConsent > 10){\n    scoreValue -= 32L;\n  }\n  else if (numNegativeConsent > 0){\n    scoreValue -= (22L + pcntWithNegativeConsent)\n  }\n\n  scoreValue -= (7L * numPendingConsent/numChildren)\n \n\n  \n   \n}\n\nStringBuffer sb = new StringBuffer ('{ \"scoreValue\": ');\n\nsb.append(scoreValue)\n  .append(', \"scoreExplanation\":\"');\nif (numChildren > 0)  {\n  sb.append('Esta pontuação reflete que de ')\n    .append(numChildren).append(' crianças, ')\n    .append(numWithoutAnyConsent).append(' não tem nenhum consentimento (positivo, negativo ou pendente), ')\n    .append(numPendingConsent).append(' só tem um consentimento pendente para usar seus dados, ')\n    .append(numNegativeConsent).append(' só tem um consentimento negativo para usar seus dados, e ')\n    .append(numNoGuardian).append(' não tem pai ou guardião configurado no sistema.');\n}\nelse {\n  sb.append('Não há registros de dados pessoais de crianças no sistema.')\n}\nsb.append('\" }')  \n\nsb.toString()",
  "Main Score": "Pontuação",
  "Privacy Notices": "Avisos de Privacidade",
  "Consent Events": "Consentimentos",
  "Consent Chart (Privacy Notice)": "Gráfico de Consentimentos (Avisos de Privacidade)",
  "Data Graph": "Gráfico de Dados",
  "Data Types": "Tipos de Dados",
  "Unmatched Records": "Registros Sem Titular",
  "Ingestion Events": "Eventos de Ingestão",
  "NavPanelInformationYouHold_personGrid": "Titulares",
  "NavPanelInformationYouHoldPopup_text": "Você deve documentar quais dados pessoais você \npossui, de onde vieram e com quem você os compartilha. \nVocê pode precisar organizar uma auditoria de\ninformações.\n",
  "NavPanelInformationYouHoldPopup_title": "Dados Armazenados",
  "NavPanelInformationYouHoldPopup_query": "long numEvents = g.V().has('Metadata.Type.Event.Ingestion',eq('Event.Ingestion')).count().next();\n\nlong numRecordsNoEdges =\ng.V()\n .has('Metadata.Type.Event.Ingestion',eq('Event.Ingestion'))\n .where(__.inE().count().is(eq(1)))\n .count().next()\n\n\nlong scoreValue = 100L;\nif (numEvents > 0){\n  \n  long pcntNoEdges = (long) (100L*numRecordsNoEdges/numEvents);\n  if (pcntNoEdges > 5 && pcntNoEdges < 40){\n    scoreValue -= 40L;\n  }\n  else if (pcntNoEdges> 40) {\n    scoreValue -= (20L + 2L* pcntNoEdges)\n  }\n  else  {\n    scoreValue -= ( pcntNoEdges)\n  }\n  \n  \n   \n}else{\n  scoreValue = 0L; \n}\n\nStringBuffer sb = new StringBuffer ('{ \"scoreValue\": ');\n\nsb.append(scoreValue)\n  .append(', \"scoreExplanation\":\"');\nif (numRecordsNoEdges > 0)  {\n  sb.append('Esta pontuação reflete que de ')\n    .append(numEvents).append(' registros de ingestão de informações pessoalmente identificáveis, ')\n    .append(numRecordsNoEdges).append(' não foram ligados a indivíduos.')\n}\nelse if (numEvents > 0) {\n  sb.append('All ').append(numEvents).append(' registros de ingestão de informações pessoalmente identificáveis no sistema foram ligados a indivíduos.')\n}\nelse {\n  sb.append('Não há registros de ingestão de informações pessoalmente identificáveis \u200B\u200Bno sistema.')\n}\nsb.append('\" }')  \n\nsb.toString()",
  "App_title": "LGPD",
  "App_message": "Selecione um painel no menu no canto superior direito",
  "Object Sensitive Data": "Objeto Dados Sensíveis",
  "Object Sensitive Data Club Membership": "Associação a Clubes",
  "Object Sensitive Data Church Membership": "Membros de Igreja",
  "Object Sensitive Data Political View": "Orientação Política",
  "Object Sensitive Data Union Membership": "Membro de Sindicato",
  "Object Sensitive Data Sexual Orientation": "Orientação Sexual",
  "Object Sensitive Data Ethnicity": "Etnia",
  "Object Sensitive Data Religion": "Religião",
  "Object Health": "Objeto Dados de Saúde",
  "Object Health Organ Donor": "Doador de Órgãos",
  "Object Health Alergies": "Alergias",
  "Object Health Blood Type": "Tipo Sanguíneo",
  "Object Health Diseases": "Doenças",
  "Object Biometric": "Objeto Dados Biometricos",
  "Object Biometric Retinal scans": "Digitalização da Retina",
  "Object Biometric Eye Colour": "Cor dos Olhos",
  "Object Biometric Facial Picture": "Imagem Facial",
  "Object Biometric Height cm": "Altura cm",
  "Object Biometric Weight kg": "Peso kg",
  "Object Biometric Fingerprints": "Impressões Digitais",
  "Object Genetic": "Objeto Dados Geneticos",
  "Object Genetic RNA": "RNA",
  "Object Genetic Family Medical History": "História Médica da Família",
  "Object Genetic DNA": "DNA",
  "grid_filterOoo": "Fitro",
  "grid_andCondition": "And",
  "grid_orCondition": "Or",
  "grid_clearFilter": "Clear",
  "grid_applyFilter": "Apply",
  "grid_contains": "Contém",
  "grid_notContains": "Não Contém",
  "grid_equals": "Igual",
  "grid_notEqual": "Diferente",
  "grid_startsWith": "Começar Com",
  "grid_endsWith": "Acaba Com",
  "grid_page": "Página",
  "grid_to": "a",
  "grid_of": "de",
  "grid_first": "Primeira",
  "grid_previous": "Anterior",
  "grid_next": "Próxima",
  "grid_last": "Última",
  "grid_more": "Mais",
  "grid_greaterThan": "Maior",
  "grid_lessThan": "Menor",
  "grid_inRange": "Entre",
  "NavPanelConsentPopup_text": "Você deve rever como você procura, registra e gerencia\nos consentimentos para uso de dados pessoais.  Atualize\nos consentimentos existentes se não atenderem ao padrão LGPD.",
  "NavPanelConsentPopup_title": "Consentimentos",
  "NavPanelConsentPopup_query": "long ageThresholdMs = (long)(System.currentTimeMillis() - (3600000L * 24L *365L  * 18L));\ndef dateThreshold = new java.util.Date (ageThresholdMs);\n\n\nlong numAdults = g.V().has('Metadata.Type.Person.Natural',eq('Person.Natural'))\n.where(\n    and(\n      __.values('Person.Natural.Date_Of_Birth').is(lt(dateThreshold))\n    )\n  )\n.count().next()\n\n\nlong numWithoutAnyConsent = g.V().has('Metadata.Type.Person.Natural',eq('Person.Natural'))\n.where(\n    and(\n      __.values('Person.Natural.Date_Of_Birth').is(lt(dateThreshold))\n    ,__.outE('Consent').count().is(eq(0))\n    )\n  )\n.count().next()\n \n \nlong numNegativeConsent = \n\ng.V().has('Metadata.Type.Person.Natural',eq('Person.Natural'))\n .where(\n    __.values('Person.Natural.Date_Of_Birth').is(lt(dateThreshold))\n  ).as('adults')\n .match(\n     __.as('adults').outE('Consent').as('consentEdges')\n    ,__.as('consentEdges').count().as('consentEdgesCount')\n    ,__.as('consentEdges').inV().as('consentEvents')\n    ,__.as('consentEvents').has('Event.Consent.Status',eq('No Consent ')).count().as('negConsentCount')\n\n )\n .select('consentEdgesCount','negConsentCount')\n.where('consentEdgesCount',eq('negConsentCount'))\n.where(__.as('consentEdgesCount').is(gt(0)))\n\n.count().next()\n\n\n\nlong numPendingConsent = \n\ng.V().has('Metadata.Type.Person.Natural',eq('Person.Natural'))\n .where(\n    __.values('Person.Natural.Date_Of_Birth').is(lt(dateThreshold))\n  ).as('adults')\n .match(\n     __.as('adults').outE('Consent').as('consentEdges')\n    ,__.as('consentEdges').count().as('consentEdgesCount')\n    ,__.as('consentEdges').inV().as('consentEvents')\n    ,__.as('consentEvents').has('Event.Consent.Status',eq('Consent Pending')).count().as('pendingConsentCount')\n\n )\n .select('consentEdgesCount','pendingConsentCount')\n.where('consentEdgesCount',eq('pendingConsentCount'))\n.where(__.as('consentEdgesCount').is(gt(0)))\n\n.count().next()\n\n\n\nlong scoreValue = 100L;\nif (numAdults > 0){\n  \n  long pcntWithoutAnyConsent = (long) (100L*numWithoutAnyConsent/numAdults);\n  if (pcntWithoutAnyConsent > 10){\n    scoreValue -= 45L;\n  }\n  else if (numWithoutAnyConsent > 0) {\n    scoreValue -= (25L + 2L* pcntWithoutAnyConsent)\n  }\n  \n  \n\n  long pcntWithNegativeConsent = (long) (100L*numNegativeConsent/numAdults);\n  if (pcntWithNegativeConsent > 10){\n    scoreValue -= 45L;\n  }\n  else if (numNegativeConsent > 0){\n    scoreValue -= (25L + 2L*pcntWithNegativeConsent)\n  }\n\n  scoreValue -= (10L * numPendingConsent/numAdults)\n \n\n  \n   \n}\n\nStringBuffer sb = new StringBuffer ('{ \"scoreValue\": ');\n\nsb.append(scoreValue)\n  .append(', \"scoreExplanation\":\"');\nif (numAdults > 0)  {\n  sb.append('Esta pontuação reflete que de ')\n    .append(numAdults).append(' registros de dados pessoais de adultos, ')\n    .append(numWithoutAnyConsent).append(' não tem nenhum consentimento (positivo, negativo ou pendente), ')\n    .append(numPendingConsent).append(' só tem um consentimento pendente para usar seus dados, ')\n    .append(numNegativeConsent).append(' só tem um consentimento negativo para usar seus dados.');\n}\nelse {\n  sb.append('Não há registros de dados pessoais de adultos no sistema.')\n}\nsb.append('\" }')  \n\nsb.toString()",
  "World Map": "Mapa Mundial",
  "NavPanelInternationalPopup_text": "Se a sua organização opera dados de cidadãos estrangeiros\nvocê deve verificar eventuais legislações aplicáveis, como\npor exemplo no caso de cidadãos de países membros da \nComunidade Europeia em que a GDPR (Global Data Protection \nRegulation) é aplicável e já está em vigor.",
  "NavPanelInternationalPopup_title": "Internacional",
  "NavPanelInternationalPopup_query": "long numItems = g.V().has('Metadata.Type.Object.Privacy_Impact_Assessment',eq('Object.Privacy_Impact_Assessment'))\n.count().next()\n \n \nlong numPrivNoticesWithoutRegulator = \n  g.V()\n  .has('Metadata.Type.Object.Privacy_Impact_Assessment',eq('Object.Privacy_Impact_Assessment'))\n  .where( __.out().has('Metadata.Type.Person.Organisation',eq('Person.Organisation')).count().is(eq(0)))\n  .count().next()\n\n\n \n\nlong scoreValue = 100L;\nif (numItems > 0){\n  \n  scoreValue -= (long) (100L*numPrivNoticesWithoutRegulator/numItems);\n\n\n\n\n \n}else{\n  scoreValue = 0L; \n}\n\nStringBuffer sb = new StringBuffer ('{ \"scoreValue\": ');\n\nsb.append(scoreValue)\n  .append(', \"scoreExplanation\":\"');\nif (numItems > 0)  {\n  sb.append('Esta pontuação reflete que ');\n  if (numItems == 1){ \n    sb.append(' a única avaliação  de impacto de proteção de dados ');\n  }else {\n    sb.append(' de ').append(numItems).append(' avaliações de impacto de proteção de dados, ');\n  }\n  if (numPrivNoticesWithoutRegulator == 0){\n    if (numItems == 1){ \n      sb.append(' tem um regulador internacional atribuído a ela ');\n    }else {\n      sb.append( 'TODAS têm um regulador internacional atribuído a elas.');\n    }\n  }\n  else {\n    if (numPrivNoticesWithoutRegulator == 1){\n      sb.append( ' não tem um regulador internacional atribuído a ela.');\n    }\n    else{\n      sb.append(numPrivNoticesWithoutRegulator);\n      sb.append(' não têm um regulador internacional atribuído a elas.');\n    }\n  }\n    \n    \n\n}\nelse {\n  sb.append ('Não há avaliações de impacto de privacidade listadas no sistema.');\n}\n\n\n\n\nsb.append('\" }')  \n\nsb.toString()",
  "NavPanelLawfulBasisPopup_query": "long numEvents = g.V().has('Metadata.Type.Object.Privacy_Notice',eq('Object.Privacy_Notice'))\n.count().next()\n\n\nlong numWithoutAnyLawfulBasis = g.V().has('Metadata.Type.Object.Privacy_Notice',eq('Object.Privacy_Notice'))\n.where(\n  __.outE('Has_Lawful_Basis_On').count().is(eq(0))\n)\n.count().next()\n \n \nlong scoreValue = 100L;\nif (numEvents > 0){\n  scoreValue -= (100L * numWithoutAnyLawfulBasis/numEvents)\n \n}else{\n  scoreValue = 0L; \n}\n\nStringBuffer sb = new StringBuffer ('{ \"scoreValue\": ');\n\nsb.append(scoreValue)\n  .append(', \"scoreExplanation\":\"');\nif (numEvents > 0)  {\n  sb.append('Esta pontuação reflete que de ');\n  sb.append(numEvents).append(' avisos de privacidade, ');\n   \n  if (numWithoutAnyLawfulBasis == 0){\n    sb.append( 'TODOS têm base legal associada a eles.');\n  }\n  else {\n    sb.append(numWithoutAnyLawfulBasis);\n    if (numWithoutAnyLawfulBasis == 1){\n      sb.append( ' não tem base legal associada a eles.');\n    }\n    else{\n      sb.append(' não têm base legal associada a eles.');\n    }\n  }\n  \n\n}\nelse {\n  sb.append ('Não há avisos de privacidade associados a qualquer base legal no sistema.');\n}\n\nsb.append('\" }')  \n\nsb.toString()",
  "NavPanelLawfulBasisPopup_title": "Bases Legais",
  "NavPanelLawfulBasisPopup_text": "Você deve identificar a base legal para sua\natividade de processamento na LGPD, documentá-la\n e atualizar seu aviso de privacidade para explicá-la.",
  "NavPanelPrivacyImpactAssessmentPopup_title": "Impacto Prot Dados",
  "NavPanelPrivacyImpactAssessmentPopup_text": "Agora, você deve se familiarizar com as melhores práticas sobre\nas avaliações de impacto de privacidade criadas pela Agencia\nNacional de Proteção de Dados e como e quando implementá-las em\nsua organização.",
  "NavPanelPrivacyImpactAssessmentPopup_query": "long numItems = g.V().has('Metadata.Type.Object.Privacy_Impact_Assessment',eq('Object.Privacy_Impact_Assessment'))\n.count().next()\n \n \nlong numPIAWithoutPrivNotices = \n  g.V()\n  .has('Metadata.Type.Object.Privacy_Impact_Assessment',eq('Object.Privacy_Impact_Assessment'))\n  .where( __.both().has('Metadata.Type.Object.Privacy_Notice',eq('Object.Privacy_Notice')).count().is(eq(0)))\n  .count().next()\n\n\n \nlong numPIAWithPrivNoticesAndDataWithoutConsent = \n  g.V()\n  .has('Metadata.Type.Object.Privacy_Impact_Assessment',eq('Object.Privacy_Impact_Assessment'))\n  .where( \n    __.both().has('Metadata.Type.Object.Privacy_Notice',eq('Object.Privacy_Notice'))\n      .both().has('Event.Consent.Status',eq('No Consent '))\n      .count().is(gt(0))\n  )\n  .count().next()\n\n\nlong numPIAWithPrivNoticesAndDataWithPendingConsent = \n  g.V()\n  .has('Metadata.Type.Object.Privacy_Impact_Assessment',eq('Object.Privacy_Impact_Assessment'))\n  .where( \n    __.both().has('Metadata.Type.Object.Privacy_Notice',eq('Object.Privacy_Notice'))\n      .both().has('Event.Consent.Status',eq('Consent Pending'))\n      .count().is(gt(0))\n  )\n  .count().next()\n\n\n\n\nlong scoreValue = 100L;\nif (numItems > 0){\n  \n  scoreValue -= (numPIAWithoutPrivNotices > 0)?(long) (15L + 10L*numPIAWithoutPrivNotices/numItems):0;\n  scoreValue -= (numPIAWithPrivNoticesAndDataWithoutConsent > 0)?(long) (40L + 5L*numPIAWithPrivNoticesAndDataWithoutConsent/numItems):0;\n  scoreValue -= (numPIAWithPrivNoticesAndDataWithPendingConsent > 0)?(long) (20L + 10L*numPIAWithPrivNoticesAndDataWithPendingConsent/numItems):0;\n\n\n  scoreValue = scoreValue < 0 ? 0 : scoreValue;\n\n \n}else{\n  scoreValue = 0L; \n}\n\nStringBuffer sb = new StringBuffer ('{ \"scoreValue\": ');\n\nsb.append(scoreValue)\n  .append(', \"scoreExplanation\":\"');\nif (numItems > 0)  {\n  sb.append('Esta pontuação reflete que de ');\n  sb.append(numItems).append((numItems == 1) ? ' avaliação de impacto de proteção de dados, ' :' avaliações de impacto de proteção de dados, ');\n   \n  if (numPIAWithoutPrivNotices == 0){\n    sb.append( 'TODAS têm um aviso de privacidade atribuído a ela(s), ');\n  }\n  else {\n    sb.append(numPIAWithoutPrivNotices);\n    if (numPIAWithoutPrivNotices == 1){\n      sb.append( ' não tem um aviso de privacidade atribuído a ela(s), ' );\n    }\n    else{\n      sb.append(' não têm um aviso de privacidade atribuído a ela(s), ');\n    }\n  }\n    \n  if (numPIAWithPrivNoticesAndDataWithoutConsent == 0){\n    sb.append( 'NENHUM dos avisos de privacidade atribuídos a ela(s) têm consentimento negativo, e ');\n  }\n  else {\n    sb.append(numPIAWithPrivNoticesAndDataWithoutConsent);\n    if (numPIAWithPrivNoticesAndDataWithoutConsent == 1){\n      sb.append( ' tem um aviso de privacidade com consentimentos negados, e ' );\n    }\n    else{\n      sb.append(' têm um aviso de privacidade com consentimentos negados, e ');\n    }\n  }\n   \n  if (numPIAWithPrivNoticesAndDataWithPendingConsent == 0){\n    sb.append( 'NENHUM dos avisos de privacidade atribuídos a ela(s) têm consentimento pendente.');\n  }\n  else {\n    sb.append(numPIAWithPrivNoticesAndDataWithPendingConsent);\n    if (numPIAWithPrivNoticesAndDataWithPendingConsent == 1){\n      sb.append( ' tem um aviso de privacidade com consentimentos pendentes.' );\n    }\n    else{\n      sb.append(' têm um aviso de privacidade com consentimentos pendentes.');\n    }\n  }\n   \n   \n   \n\n}\nelse {\n  sb.append ('Não há avaliações de impacto de privacidade listadas no sistema.');\n}\n\n\n\n\nsb.append('\" }')  \n\nsb.toString()",
  "NavPanelPrivacyNoticesPopup_title": "Avisos de Priv.",
  "NavPanelPrivacyNoticesPopup_text": "Você deve rever seus avisos de privacidade atuais\ne colocar em prática um plano para fazer as\nalterações necessárias a tempo para a \nimplementação da LGPD.\n",
  "NavPanelPrivacyNoticesPopup_query": "long numEvents = g.V().has('Metadata.Type.Object.Privacy_Notice',eq('Object.Privacy_Notice')).count().next();\n\nlong numRecordsNoConsent =\ng.V().has('Metadata.Type.Object.Privacy_Notice',eq('Object.Privacy_Notice')).as('privNotice')\n.match(\n    __.as('privNotice').both().has('Metadata.Type.Event.Consent',eq('Event.Consent')).count().as('consentCount')\n\n)\n.select('consentCount')\n.where(__.as('consentCount').is(eq(0)))\n.count().next()\n\nlong numRecordsNoPIA =\ng.V().has('Metadata.Type.Object.Privacy_Notice',eq('Object.Privacy_Notice')).as('privNotice')\n.match(\n    __.as('privNotice').both().has('Metadata.Type.Object.Privacy_Impact_Assessment',eq('Object.Privacy_Impact_Assessment')).count().as('consentCount')\n\n)\n.select('consentCount')\n.where(__.as('consentCount').is(eq(0)))\n.count().next()\n\nlong numRecordsLessThan50PcntPositiveConsent =\ng.V().has('Metadata.Type.Object.Privacy_Notice',eq('Object.Privacy_Notice')).as('privNotice')\n.match(\n    __.as('privNotice').both().has('Metadata.Type.Event.Consent',eq('Event.Consent')).count().as('consentCount')\n  , __.as('privNotice').both().has('Event.Consent.Status',eq('Consent')).count().math('_ * 2').as('posConsentCountDouble')\n)\n.select(\n  'consentCount'\n, 'posConsentCountDouble'\n)\n.where(\n  'consentCount', gt('posConsentCountDouble')\n\n)\n.count().next()\n\n\nlong scoreValue = 100L;\nif (numEvents > 0){\n  \n  long pcntNoConsent = (long) (100L*numRecordsNoConsent/numEvents);\n  if (pcntNoConsent > 10){\n    scoreValue -= 40L;\n  }\n  else if (numRecordsNoConsent> 0) {\n    scoreValue -= (20L + 2L* pcntNoConsent)\n  }\n  \n  \n  long pcntNoPIA = (long) (100L*numRecordsNoPIA/numEvents);\n  if (pcntNoPIA > 10){\n    scoreValue -= 50L;\n  }\n  else if (numRecordsNoPIA > 0){\n    scoreValue -= (30L + 2L*pcntNoPIA)\n  }\n\n  scoreValue -= (10L * numRecordsLessThan50PcntPositiveConsent/numEvents)\n \n\n  \n   \n}else{\n  scoreValue = 0L; \n}\n\nStringBuffer sb = new StringBuffer ('{ \"scoreValue\": ');\n\nsb.append(scoreValue)\n  .append(', \"scoreExplanation\":\"');\nif (numEvents > 0)  {\n  sb.append('Esta pontuação reflete que de ');\n  sb.append(numEvents).append(' avisos de privacidade, ');\n   \n  if (numRecordsNoConsent == 0){\n    sb.append( ' TODOS tem consentimento, ');\n  }\n  else {\n    sb.append(numRecordsNoConsent);\n    if (numRecordsNoConsent == 1){\n      sb.append( ' não tem consentimento, ');\n    }\n    else{\n      sb.append(' não têm consentimento, ');\n    }\n  }\n  \n  if (numRecordsNoPIA == 0){\n    sb.append(' TODOS têm avaliações de impacto de privacidade, ');\n\n  }\n  else{\n    sb.append(numRecordsNoPIA);\n    if (numRecordsNoPIA == 1){\n      sb.append(' não tem avaliações de impacto de privacidade, e ');\n    }\n    else {\n      sb.append(' não têm avaliações de impacto de privacidade, e ');\n    }\n  }\n  \n  if (numRecordsLessThan50PcntPositiveConsent == 0){\n    sb.append(' NENHUM tem mais de 50% de consentimentos negativos ou pendentes.');\n  }\n  else{\n    sb.append(numRecordsLessThan50PcntPositiveConsent);\n    if (numRecordsLessThan50PcntPositiveConsent == 1){\n      sb.append(' tem mais de 50% de consentimentos negativos ou pendentes.');\n    }\n    else {\n      sb.append(' têm mais de 50% de consentimentos negativos ou pendentes.');\n    }\n  }\n\n\n}\nelse {\n  sb.append ('Não há avisos de privacidade no sistema.');\n}\n\nsb.append('\" }')  \n\nsb.toString()",
  "NavPanelSubjectAccessRequestPopup_title": "Solicit. de Dados",
  "NavPanelSubjectAccessRequestPopup_query": "long fifteenDayThresholdMs = (long)(System.currentTimeMillis() - (3600000L * 24L *15L));\ndef fifteenDayThreshold = new java.util.Date (fifteenDayThresholdMs);\nlong fiveDayThresholdMs = (long)(System.currentTimeMillis() - (3600000L * 24L *5L));\ndef fiveDayThreshold = new java.util.Date (fiveDayThresholdMs);\n\nlong numEvents = g.V().has('Metadata.Type.Event.Subject_Access_Request',eq('Event.Subject_Access_Request')).count().next();\n\nlong numRecordsOlder15Days =\n\ng.V().has('Metadata.Type.Event.Subject_Access_Request',eq('Event.Subject_Access_Request')).as('sar')\n.where(\n  __.values('Event.Subject_Access_Request.Metadata.Create_Date').is(lte(fifteenDayThreshold))\n) \n\n.count().next()\n\nlong numRecordsOlder5Days =\n\ng.V().has('Metadata.Type.Event.Subject_Access_Request',eq('Event.Subject_Access_Request')).as('sar')\n.where(\n  __.values('Event.Subject_Access_Request.Metadata.Create_Date').is(lte(fiveDayThreshold))\n) \n\n.count().next()\n\n\nlong scoreValue = 100L;\nif (numEvents > 0){\n  \n  long pcntOlder15Days = (long) (100L*numRecordsOlder15Days/numEvents);\n  if (pcntOlder15Days > 10){\n    scoreValue -= 80L;\n  }\n  else if (numRecordsOlder15Days> 0) {\n    scoreValue -= (60L + 2L* pcntOlder15Days)\n  }\n  \n  \n\n  scoreValue -= (20L * numRecordsOlder5Days/numEvents)\n \n\n  \n   \n}else{\n  scoreValue = 0L; \n}\n\nStringBuffer sb = new StringBuffer ('{ \"scoreValue\": ');\n\nsb.append(scoreValue)\n  .append(', \"scoreExplanation\":\"');\nif (numEvents > 0)  {\n  sb.append('Esta pontuação reflete que de ');\n  sb.append(numEvents).append(' solicitações de dados, ');\n   \n  if (numRecordsOlder15Days == 0){\n    sb.append( 'NENHUMA tem mais de 15 dias, e ');\n  }\n  else {\n    sb.append(numRecordsOlder15Days);\n    if (numRecordsOlder15Days == 1){\n      sb.append( ' tem mais de 15 dias, e ');\n    }\n    else{\n      sb.append(' têm mais de 15 dias, e ');\n    }\n  }\n  \n  if (numRecordsOlder5Days == 0){\n    sb.append(' NENHUMA tem mais de 5 dias.');\n\n  }\n  else{\n    sb.append(numRecordsOlder5Days);\n    if (numRecordsOlder5Days == 1){\n      sb.append(' tem mais de 5 dias.');\n    }\n    else {\n      sb.append(' têm mais de 5 dias.');\n    }\n  }\n  \n\n}\nelse {\n  sb.append ('Não há Solicitações de Acesso a dados pessoais no sistema.');\n}\n\nsb.append('\" }')  \n\nsb.toString()",
  "NavPanelSubjectAccessRequestPopup_text": "Você deve atualizar seus procedimentos e planejar como\"\nlidará com solicitações dentro dos novos prazos e \"\nfornecer qualquer informação adicional.",
  "Date Of Birth": "Data de Nascimento",
  "Customer ID": "Identificação do Titular",
  "Compliance Scores": "Pontuação",
  "NavPanelIndividualsRightsPopup_title": "Direitos Pessoais",
  "NavPanelIndividualsRightsPopup_query": "long numItems = g.V()\n .has('Metadata.Type.Object.Data_Procedures',eq('Object.Data_Procedures'))\n .count()\n .next()\n\n\nlong numDeleteURL = g.V()\n .has('Metadata.Type.Object.Data_Procedures',eq('Object.Data_Procedures'))\n .values('Object.Data_Procedures.Delete_URL')\n .count()\n .next()\n\nlong numUpdateURL = g.V()\n .has('Metadata.Type.Object.Data_Procedures',eq('Object.Data_Procedures'))\n .values('Object.Data_Procedures.Delete_URL')\n .count()\n .next()\n\nlong numWithoutDeleteUrl = (numItems - numDeleteURL);\nlong numWithoutUpdateUrl = (numItems - numUpdateURL);\n\nlong scoreValue = 100L;\nif (numItems > 0){\n  \n  scoreValue -= (long) (50L*numWithoutDeleteUrl/numItems);\n  scoreValue -= (long) (50L*numWithoutUpdateUrl/numItems);\n\n}else{\n  scoreValue = 0L; \n}\n\nStringBuffer sb = new StringBuffer ('{ \"scoreValue\": ');\n\nsb.append(scoreValue)\n  .append(', \"scoreExplanation\":\"');\nif (numItems > 0)  {\n  sb.append('Esta pontuação reflete que de ');\n  sb.append(numItems).append(' procedimentos de fontes de dados, ');\n   \n  if (numWithoutUpdateUrl == 0){\n    sb.append( 'TODOS têm um URL de atualização, ');\n  }\n  else {\n    sb.append(numWithoutUpdateUrl);\n    if (numWithoutUpdateUrl == 1){\n      sb.append( ' tem um URL de atualização, ');\n    }\n    else{\n      sb.append(' têm um URL de atualização, ');\n    }\n  }\n    \n    \n       \n  if (numWithoutDeleteUrl == 0){\n    sb.append( 'TODOS têm um URL de exclusão.');\n  }\n  else {\n    sb.append(numWithoutDeleteUrl);\n    if (numWithoutDeleteUrl == 1){\n      sb.append( ' tem um URL de exclusão.');\n    }\n    else{\n      sb.append(' têm um URL de exclusão.');\n    }\n  }\n\n\n}\nelse {\n  sb.append ('Não há procedimentos de dados listados no sistema.');\n}\n\n\n\n\nsb.append('\" }')  \n\nsb.toString();",
  "NavPanelIndividualsRightsPopup_text": "Você deve verificar seus procedimentos para garantir\nque cubram todos os direitos que os indivíduos têm,\ninclusive como excluiria dados pessoais ou forneceria\ndados eletronicamente e em um formato comumente usado.",
  "NavPanelDataBreachPopup_title": "Violação de Dados",
  "NavPanelDataBreachPopup_query": "long numItems = g.V().has('Metadata.Type.Event.Data_Breach',eq('Event.Data_Breach'))\n.count().next()\n \n \nlong numOpenDataBreachDataStolen = \n  g.V()\n  .has('Event.Data_Breach.Status',eq('Open'))\n  .where( \n    or(\n      __.has('Event.Data_Breach.Impact',eq('Customer Data Stolen (External)'))\n     ,__.has('Event.Data_Breach.Impact',eq('Customer Data Stolen (Internal)'))\n    )\n  )\n  .count().next()\n\nlong numOpenDataBreachDataLost = \n  g.V()\n  .has('Event.Data_Breach.Status',eq('Open'))\n  .where( \n    __.has('Event.Data_Breach.Impact',eq('Data Lost'))\n  )\n  .count().next()\n\n\n\n\nlong scoreValue = 100L;\nif (numItems > 0){\n  \n  if (numOpenDataBreachDataLost > 0){\n    scoreValue -= (long) (15L + 10L*numOpenDataBreachDataLost/numItems);\n  }\n  \n  if (numOpenDataBreachDataStolen > 0){\n    scoreValue -= (long) (60L + 15L*numOpenDataBreachDataStolen/numItems);\n  }\n\n  scoreValue = scoreValue < 0 ? 0 : scoreValue;\n\n \n}else{\n  scoreValue = 100L; \n}\n\nStringBuffer sb = new StringBuffer ('{ \"scoreValue\": ');\n\nsb.append(scoreValue)\n  .append(', \"scoreExplanation\":\"');\nif (numItems > 0)  {\n  sb.append('Esta pontuação reflete que de ');\n  sb.append(numItems).append(' Evento(s) de Violação de Dados, ');\n   \n  if (numOpenDataBreachDataStolen == 0){\n    sb.append( 'Nenhum dado foi roubado, ');\n  }\n  else {\n    sb.append(numOpenDataBreachDataStolen);\n    if (numOpenDataBreachDataStolen == 1){\n      sb.append( ' estava relacionado a dados roubados, ' );\n    }\n    else{\n      sb.append(' estavam relacionados a dados roubados, ');\n    }\n  }\n    \n  if (numOpenDataBreachDataLost == 0){\n    sb.append( 'e nenhum estava relacionado à perda de dados.');\n  }\n  else {\n    sb.append('and ')\n    sb.append(numOpenDataBreachDataLost);\n    if (numOpenDataBreachDataLost == 1){\n      sb.append( ' estava relacionado à perda de dados.' );\n    }\n    else{\n      sb.append(' estavam relacionado à perda de dados.');\n    }\n  }\n   \n   \n   \n\n}\nelse {\n  sb.append ('Não há eventos de violação de dados listados no sistema.');\n}\n\n\n\n\nsb.append('\" }')  \n\nsb.toString()",
  "NavPanelDataBreachPopup_text": "Certifique-se de ter os procedimentos corretos\npara detectar, denunciar e investigar uma violação\nde dados pessoais.",
  "NavPanelDataProtnOfficerPopup_title": "Encarregado",
  "NavPanelDataProtnOfficerPopup_query": "long numDPOs = g.V().has('Person.Employee.Role',eq('Data Protection Officer'))\n.count().next()\n \n \nlong numDPODirectReports = g.V().has('Person.Employee.Role',eq('Data Protection Officer')).inE('Reports_To')\n.count().next()\n\n\nlong numDPOsFailed  = g.V().has('Person.Employee.Role',eq('Data Protection Officer'))\n.in().has('Event.Training.Status',eq('Failed'))\n.count().next()\n \n\nlong numDPODirectReportsFailed = g.V().has('Person.Employee.Role',eq('Data Protection Officer')).inE('Reports_To')\n.outV().in().has('Event.Training.Status',eq('Failed'))\n.count().next()\n\n\nlong numDPOsSecondReminder  = g.V().has('Person.Employee.Role',eq('Data Protection Officer'))\n.in().has('Event.Training.Status',eq('Second  Reminder'))\n.count().next()\n \n\nlong numDPODirectReportsSecondReminder = g.V().has('Person.Employee.Role',eq('Data Protection Officer')).inE('Reports_To')\n.outV().in().has('Event.Training.Status',eq('Second  Reminder'))\n.count().next()\n\n\n\n\nlong scoreValue = 100L;\nif (numDPOs > 0){\n  scoreValue -= (long) (25L + 25L*numDPOsFailed/numDPOs);\n  scoreValue -= (long) (6L + 7L*numDPOsSecondReminder/numDPOs);\n}\nif (numDPODirectReports > 0){\n  scoreValue -= (long) (13L + 12L*numDPODirectReportsFailed/numDPODirectReports);\n  \n  scoreValue -= (long) (6L + 6L*numDPODirectReportsSecondReminder/numDPODirectReports);\n}\nif (numDPOs == 0 && numDPODirectReports == 0){\n  scoreValue = 0L; \n}\n\nStringBuffer sb = new StringBuffer ('{ \"scoreValue\": ');\n\nsb.append(scoreValue)\n  .append(', \"scoreExplanation\":\"');\nif (numDPOs > 0)  {\n  sb.append('Esta pontuação reflete que de ');\n  sb.append(numDPOs);\n  sb.append(' Data Protection Officer(s), ');\n  if (numDPOsFailed == 0){\n    sb.append( 'TODOS passaram os Testes de Conhecimentos sobre a LGPD, e ');\n  }\n  else {\n    sb.append(numDPOsFailed);\n    if (numDPOsFailed == 1){\n      sb.append( ' não passou os Testes de Conhecimentos sobre a LGPD, e ');\n    }\n    else{\n      sb.append(' não passaram os Testes de Conhecimentos sobre a LGPD, e ');\n    }\n  }\n    \n    \n  if (numDPOsSecondReminder == 0){\n    sb.append( 'NINGUEM recebeu um segundo lembrete para fazer o teste.');\n  }\n  else {\n    if (numDPOsSecondReminder == 1){\n      sb.append( ' um recebeu um segundo lembrete para fazer o teste.');\n    }\n    else{\n    sb.append(numDPOsSecondReminder);\n      sb.append(' receberam um segundo lembrete para fazer o teste.');\n    }\n  }\n\n\n}\nelse {\n  sb.append ('Não há Data Protection Officers listados no sistema.');\n}\n\nif (numDPODirectReports > 0){\n  if (numDPODirectReports == 1){\n    sb.append('Dos colaboradores subordinados ao Data Protection Officer, ');\n  }\n  else{\n    sb.append('Dos ')      .append(numDPODirectReports)      .append(' colaboradores subordinados ao Data Protection Officer, ');\n  }\n  \n  if (numDPODirectReportsFailed == 0){\n    sb.append ('TODOS passaram os Testes de Conhecimentos sobre a LGPD, ');\n  }\n  else{\n    if (numDPODirectReportsFailed == 1){\n      sb.append (' um não passou os Testes de Conhecimentos sobre a LGPD, e ');\n    }\n    else{\n      sb.append(numDPODirectReportsFailed);\n      sb.append (' não passaram os Testes de Conhecimentos sobre a LGPD, e ');\n    }\n  }\n  \n  if (numDPODirectReportsSecondReminder == 0){\n    sb.append ('NINGUEM recebeu um segundo lembrete para fazer o teste');\n  }\n  else{\n    if (numDPODirectReportsSecondReminder == 1){\n      sb.append (' um recebeu um segundo lembrete para fazer o teste.');\n    }\n    else{\n      sb.append(numDPODirectReportsSecondReminder);\n      sb.append (' receberam um segundo lembrete para fazer o teste.');\n    }\n  }\n  \n  \n}\n\n\n\nsb.append('\" }')  \n\nsb.toString()",
  "NavPanelDataProtnOfficerPopup_text": "Você deve designar alguém para assumir a responsabilidade\npela conformidade da proteção de dados e avaliar onde essa\nfunção se enquadrará na estrutura e nos procedimentos de \ngovernança de sua organização. Você deve considerar se é\nnecessário designar formalmente um responsável pela\nproteção de dados.",
  "SAR Type": "Classificação de SAR",
  "Request Date": "Data da Solicitação",
  "SAR Status": "Status da Solicitação ",
  "Request Status": "Status da Solicitação",
  "Request Types": "Classificações de SAR",
  "Detailed Scores": "Pontuação Detalhada",
  "Details": "Detalhes",
  "Preview": "Preview",
  "Save": "Salvar",
  "Chidren's ages": "Idades de crianças",
  "Info Collected": "Informações Coletadas",
  "Who is Collecting": "Quem está Coletando",
  "How is it Collected": "Como estão sendo Coletadas",
  "Why is it Collected": "Porque estão sendo Coletadas",
  "How will it be Used": "Como será Utilizado",
  "Who will it be Shared": "Como será Compartilhada",
  "Effect on Individuals": "Efeitos nos indivíduos",
  "Likely to Complain": "Possibilidade de Reclamação",
  "Link to Campaign": "Link para a Campanha",
  "Stop Date": "Data de Expiração",
  "Passed": "Aprovado",
  "Link Sent": "Link Enviado",
  "Reminder Sent": "Alerta Enviado",
  "Second  Reminder": "Segundo Alerta",
  "Compliance Notices": "Avisos de Conformidade",
  "Compliance Notices Grid": "Grid de Avisos de Conformidade",
  "Titular": "Titular",
  "Metadata Type Object Privacy Notice": "Classificação por Tipo",
  "Text": "Texto",
  "Data Breach Graph": "Grafo de Vazamento de Dados",
  "Infrastructure Graph": "Grafo de Infraestrutura",
  "Metadata Type Object AWS VPC": "VPC",
  "Sensitive Data": "Dados Sensíveis",
  "Ethnicity": "Etnia",
  "Religion": "Religião",
  "Political View": "Orientação Política",
  "Union Membership": "Membro de Sindicato",
  "Church Membership": "Membro de Igreja",
  "Metadata Type Event Subject Access Request": "Classificação",
  "Name": "Propriedade",
  "Match Weight": "Peso da Propriedade",
  "Exclude From Search": "Excluída da Pesquisa",
  "Exclude From Subsequence Search": "Propriedade Não Obrigatória",
  "Exclude From Update": "Excluída do Update",
  "Reports To": "Subordinado",
  "Metadata Type Person Employee": "Classificação",
  "Assigned SAR Request": "Responsável por cumprir",
  "Event Training Person": "foi treinado",
  "Metadata Type Event Training": "Classificação",
  "Metadata Type Object AWS Security Group": "Classificação",
  "Legislation": "Legislação",
  "Awareness": "Conscientização",
  "Children": "Crianças",
  "Data Breaches": "Violação de Dados",
  "Data Protection Officer": "Encarregado",
  "Indiv Rights": "Direitos Pessoais",
  "Info you hold": "Dados Armazenados",
  "International": "Internacional",
  "Lawful Basis": "Bases Legais",
  "Privacy Impact Assessment": "Availação de Impacto de Priv",
  "Subject Access Requests": "Solicitação de Acesso",
  "Total Score": "Pontuação Total",
  "GDPR Scores": "Pontuação LGPD",
  "POLE Counts": "Contagem POLE",
  "Has Table": "Tem Tabela",
  "Has Column": "Tem Coluna",
  "Has Semantic": "Tem Semântica",
  "Object Metadata Source Name": "Nome",
  "Object Metadata Source Create Date": "Data de Criação",
  "Object Metadata Source Update Date": "Data de Atualização",
  "Metadata Source Type": "Tipo de Dados",
  "Metadata Type Object Metadata Source": "Metadados",
  "Object Metadata Source Description": "Descrição",
  "Object Metadata Source": "Metadados",
  "Object Metadata Source Domain": "Domínio",
  "Object Metadata Source Domain Frequency": "Frequência",
  "Unstructured Data PII": "Dados Pessoais de Fontes de dados Nao Estruturadas",
  "Structured Data PII": "Dados Pessoais de Fontes de dados Estruturadas",
  "Sensitive Data Spreadsheet 2": "Planilha de Dados Sensíveis",
  "Events Per Data Source":"Eventos por Fonte De Dados",
  "CRM System CSV": "Arquivo CSV do sistema de CRM"
}
